pipeline {
    agent any
    
    environment {
        SONAR_PROJECT_KEY = "microservices-checkoutservice"
        SONAR_PROJECT_NAME = "Checkout Service"
        SONAR_PROJECT_VERSION = "1.0"
        APP_NAME = "checkoutservice"
        RELEASE = "1.0.0"
        DOCKER_USER = "mouhib19"
        DOCKER_CREDS = credentials('dockerhub-creds')  // Must be configured in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube-Server') {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.projectName="${SONAR_PROJECT_NAME}" \
                        -Dsonar.projectVersion=${SONAR_PROJECT_VERSION} \
                        -Dsonar.sources=. \
                        -Dsonar.java.binaries=target/classes
                    """
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        always {
            node('master') {  // This fixes the missing context error
                archiveArtifacts artifacts: '**/target/surefire-reports/*.xml', allowEmptyArchive: true
                cleanWs()
            }
        }
    }
}
